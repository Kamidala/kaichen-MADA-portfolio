[
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About Me",
    "section": "",
    "text": "Kai Chen"
  },
  {
    "objectID": "aboutme.html#short-biography",
    "href": "aboutme.html#short-biography",
    "title": "About Me",
    "section": "Short Biography",
    "text": "Short Biography\nI am a Master of Public Health (MPH) student with an emphasis in Epidemiology. I completed my undergraduate education at the University of Georgia (UGA) with a major in Biology before matriculating into the MPH program via the dual degree pathway offered (4+1). As a future public health professional who comes from a multicultural background, I find the international stage to be very important to ongoing public health topics.\n\nFun Fact\nI very much enjoy foreign language musicals and have met some of my closest friends through a French musical it seems no one has ever heard of: Mozart L’Opera Rock."
  },
  {
    "objectID": "aboutme.html#goals-for-this-course",
    "href": "aboutme.html#goals-for-this-course",
    "title": "About Me",
    "section": "Goals for This Course",
    "text": "Goals for This Course\nI hope to learn more in-depth techniques for data analysis and implement them in my current and future research. I am especially interested in how this class will approach machine learning, since it can be used with such versatility (and even predict earthquake damage)."
  },
  {
    "objectID": "aboutme.html#research-interests",
    "href": "aboutme.html#research-interests",
    "title": "About Me",
    "section": "Research Interests",
    "text": "Research Interests\nMy primary interest is in respiratory illness, especially infectious respiratory diseases. For this semester, I am participating in research on household air pollution while interning abroad in Guatemala (to analyze their surveillance data on respiratory disease)."
  },
  {
    "objectID": "aboutme.html#training",
    "href": "aboutme.html#training",
    "title": "About Me",
    "section": "Training",
    "text": "Training\nI have attended two outbreak simulations hosted by UGA in the past, and I have also collected data on behalf of the Centers for Disease Control and Prevention in 2021. Previous research experiences and coursework have led to skills in JMP, SAS, and R."
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Loading Packages/Libraries\n\n# Load Packages\nlibrary(dslabs)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\n\n\nInvestigating Gapminder\n\n# Check the Help File for Gapminder\nhelp(gapminder)\n\nstarting httpd help server ... done\n\n# Data Structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n# Data Summary\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n# Class\nclass(gapminder)\n\n[1] \"data.frame\"\n\n\n\n\nData Processing\n\n# Assign African Countries to a New Object\nafricadata <- gapminder %>% filter(continent == \"Africa\")\n\n## Find Missing Values in Infant Mortality\nyears_of_na_infant_mortality <- africadata %>% select(year, infant_mortality) %>% filter(is.na(infant_mortality) == TRUE) %>% group_by(year) %>% count()\nunique(years_of_na_infant_mortality$year)\n\n [1] 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974\n[16] 1975 1976 1977 1978 1979 1980 1981 2016\n\n# Checking New Object Structure and Summary\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n# Making New Datasets for Infant Mortality + Life Expectancy (IMLE) & Population + Life Expectancy (PLE)\nIMLE <- africadata %>% select(infant_mortality, life_expectancy)\nPLE <- africadata %>% select(population, life_expectancy)\n\n# Checking IMLE and PLE Structure and Summaries\n## Structure\nstr(IMLE)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nstr(PLE)\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\n## Summary\nsummary(IMLE)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\nsummary(PLE)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51                         \n\n\n\n\nGraphing\n\n# IMLE: Infant Mortality vs Life Expectancy\nggplot(IMLE, aes(x = infant_mortality, y = life_expectancy)) + geom_point() + labs(x = \"Infant Mortality\", y = \"Life Expectancy\", title = \"Infant Mortality vs Life Expectancy for African Nations\")\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n# PLE\nggplot(PLE, aes(x = population, y = life_expectancy)) + geom_point() + scale_x_log10() + labs(x = \"Population (Log10)\", y = \"Life Expectancy\", title = \"Population (Log10) vs Life Expectancy for African Nations\")\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\nData From the Year 2000\n\n# Make New Object to House Year 2000 Data\ndata_2000 <- africadata %>% filter(year == 2000)\n\n# Check Structure and Summary\nstr(data_2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(data_2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n# Reevaluating Previous Plots\nIMLE <- data_2000 %>% select(infant_mortality, life_expectancy)\nPLE <- data_2000 %>% select(population, life_expectancy)\n## IMLE: Infant Mortality vs Life Expectancy\nggplot(IMLE, aes(x = infant_mortality, y = life_expectancy)) + geom_point() + labs(x = \"Infant Mortality\", y = \"Life Expectancy\", title = \"Infant Mortality vs Life Expectancy for African Nations in 2000\")\n\n\n\n## PLE\nggplot(PLE, aes(x = population, y = life_expectancy)) + geom_point() + scale_x_log10() + labs(x = \"Population (Log10)\", y = \"Life Expectancy\", title = \"Population (Log10) vs Life Expectancy for African Nations in 2000\")\n\n\n\n# Fitting a Simple Model\nfit1 <- lm(life_expectancy ~ infant_mortality, data = data_2000)\nfit2 <- lm(life_expectancy ~ population, data = data_2000)\n\n# Summary of Models\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = data_2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      71.29331    2.42611  29.386  < 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = data_2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   <2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159\n\n\nAccording to the first model, infant mortality is a significant predictor (p < 0.001) on life expectancy for African nations. In contrast, population is not a significant predictor (p = 0.616) for life expectancy in the second model.\nHi! This section added by Katie Wells.\nContinued analysis of the dataset\n\n## Comparing fertility and infant mortality for the 2000 dataset\nggplot(data_2000, aes(x = infant_mortality, y = fertility)) + geom_point() + labs(x = \"Infant Mortality\", y = \"Fertility\", title = \"Infant Mortality vs Fertility for African Nations in 2000\")\n\n\n\n## Comparing population size and fertility for the 2000 dataset\nggplot(data_2000, aes(x = population, y = fertility)) + geom_point() + scale_x_log10() + labs(x = \"Population (Log10)\", y = \"Fertility\", title = \"Population (Log10) vs Fertility for African Nations in 2000\")\n\n\n\n\nThere appears to be a positive correlation between infant mortality and fertility but no strong correlation between fertility and population size.\n\n## load packages\nlibrary(\"broom\")\n\n\n## Fitting fertility against population and infant mortality  in a linear model\nfit3 <- lm(fertility ~ population, data = data_2000)\nfit4 <- lm(fertility ~ infant_mortality, data = data_2000)\n\n## show fit output as a table\ntidy(fit3)\n\n# A tibble: 2 × 5\n  term             estimate     std.error statistic  p.value\n  <chr>               <dbl>         <dbl>     <dbl>    <dbl>\n1 (Intercept) 5.09          0.253            20.1   2.43e-25\n2 population  0.00000000447 0.00000000939     0.476 6.36e- 1\n\ntidy(fit4)\n\n# A tibble: 2 × 5\n  term             estimate std.error statistic  p.value\n  <chr>               <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)        2.06     0.323        6.38 6.08e- 8\n2 infant_mortality   0.0392   0.00382     10.3  8.38e-14\n\n\nThe fit of first model shows that infant mortality is a significant predictor (p < 0.001) on fertility for African nations. In contrast, population is not a significant predictor (p = 0.064) for fertility in the second model."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kai Chen’s Website and Data Analysis Portfolio",
    "section": "",
    "text": "Greetings!\n\nThis website will be in use for the Spring 2023 semester.\nThis website is been created as an assignment for the Modern Data Analysis course at the University of Georgia. This website will also function as a data analysis portfolio from January to May.\n\nPlease use the Menu Bar above to look around.\nIf you have any questions, please contact me via email."
  },
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "The GitHub repository for TidyTuesday was cloned from https://github.com/rfordatascience/tidytuesday, and the CSV file for 2/14/2023 was copied and pasted into the data folder of this portfolio."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "The data for this exercise was obtained from the Harvard Dataverse - Cooperative Congressional Election Study (CCES). This dataset was released in 2017 and contains “a nationally representative sample of 64,600 American adults” from 2016 (Ansolabehere and Schaffner 2018). A data dictionary/codebook was also available for view.\nBecause the original dataset was over 100 MB, a version with several variables removed was saved and used for this analysis. The original dataset can still be found and downloaded from the CCES site."
  },
  {
    "objectID": "dataanalysis_exercise.html",
    "href": "dataanalysis_exercise.html",
    "title": "Data Analysis Exercise",
    "section": "",
    "text": "This data was obtained from the Centers for Disease Control and Prevention (CDC)’s National Notifiable Diseases Surveillance System (NNDSS).\n\n\n\nEach week, the Division of Health Informatics and Surveillance at the CDC releases a weekly report describing “provisional” cases of diseases within the United States and its territories. This dataset was released on January 26, 2023 (Health Informatics and Surveillance 2023).\n\n\n\nThis dataset contains 424,000 rows and 16 columns."
  },
  {
    "objectID": "dataanalysis_exercise.html#load-libraries",
    "href": "dataanalysis_exercise.html#load-libraries",
    "title": "Data Analysis Exercise",
    "section": "Load Libraries",
    "text": "Load Libraries\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()"
  },
  {
    "objectID": "dataanalysis_exercise.html#load-data",
    "href": "dataanalysis_exercise.html#load-data",
    "title": "Data Analysis Exercise",
    "section": "Load Data",
    "text": "Load Data\n\nNNDSS_Weekly <- read_csv(\"data-analysis-exercise/data/NNDSS_Weekly_Data.csv\")\n\nRows: 424130 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): Reporting Area, Label, Current week, flag, Previous 52 weeks Max, f...\ndbl (7): Current MMWR Year, MMWR WEEK, Current week, Previous 52 week Max, C...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "dataanalysis_exercise.html#cleaning-data",
    "href": "dataanalysis_exercise.html#cleaning-data",
    "title": "Data Analysis Exercise",
    "section": "Cleaning Data",
    "text": "Cleaning Data\nVariables of interest include state/territory, cases this week, and disease.\n\n# Set Cases in New York City To Be Counted as Cases in New York (State)\nNNDSS_Weekly <- NNDSS_Weekly %>%\n  mutate(State_Territory = case_when(\n    LOCATION1 == \"NEW YORK CITY\" ~ \"NEW YORK\",\n    TRUE ~ LOCATION1))\n\n# Rename Variables\nNNDSS_Weekly <- NNDSS_Weekly %>% rename(Disease = Label) %>%\n  rename(Year = `Current MMWR Year`) %>% rename(Week = `MMWR WEEK`) %>% rename(Week_Cases = `Current week`)\n\n# Remove Extra Spaces and NAs in State_Territory\nNNDSS_Weekly$Disease <- sub(\"  \", \" \", NNDSS_Weekly$Disease)\nNNDSS_Weekly <- NNDSS_Weekly %>%\n  filter(State_Territory != \"NA\")\n\n# Preliminary Graph: Cases per State\nggplot(NNDSS_Weekly, aes(y = State_Territory, x = Week_Cases)) + geom_col()\n\nWarning: Removed 324437 rows containing missing values (`position_stack()`)."
  },
  {
    "objectID": "visualization_exercise.html#load-libraries",
    "href": "visualization_exercise.html#load-libraries",
    "title": "Visualization Exercise",
    "section": "Load Libraries",
    "text": "Load Libraries\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(ggthemes)"
  },
  {
    "objectID": "visualization_exercise.html#load-data",
    "href": "visualization_exercise.html#load-data",
    "title": "Visualization Exercise",
    "section": "Load Data",
    "text": "Load Data\n\ndata <- read_tsv(\"data/CCES16_Common_OUTPUT_Feb2018_VV2.tab\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n\n\nRows: 64600 Columns: 525\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (160): countyname, CurrentGovName, CurrentGovParty, CurrentHouseGender,...\ndbl  (361): tookpost, lookupzip, inputstate, cdid113, cdid115, countyfips, G...\ntime   (4): starttime_pre, endtime_pre, starttime_post, endtime_post\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "visualization_exercise.html#data-manipulation-and-graphing",
    "href": "visualization_exercise.html#data-manipulation-and-graphing",
    "title": "Visualization Exercise",
    "section": "Data Manipulation and Graphing",
    "text": "Data Manipulation and Graphing\n\n# Variables of Interest: \n## CL_E2016PPEP (Political Party in 2016 Presidential Primary)\ndata_specific <- data %>%\n  select(CL_E2016PPEP, religpew, race, hispanic) %>%\n  filter(CL_E2016PPEP == \"REP\" | CL_E2016PPEP == \"DEM\")\n\n### Rename REP/DEM to subgroups used in original graph\ndata_specific <- data_specific %>%\n  mutate(CL_E2016PPEP = case_when(\n    CL_E2016PPEP == \"REP\" ~ \"Republican primary voters\",\n    CL_E2016PPEP == \"DEM\" ~ \"Democratic primary voters\"))\n\n### Change variable for political party into a factor so graph will be generated with \n### Republican voters on the left every time\ndata_specific$CL_E2016PPEP <- factor(data_specific$CL_E2016PPEP, \n  levels = c(\"Republican primary voters\", \"Democratic primary voters\"))\n\n## pid3 (Political Identity) --> ended up not being relevant\n## Religion: Christian, Non-Christian/Something Else, No Religious Affiliation\ndata_specific <- data_specific %>%\n  mutate(Religious_Affiliation = case_when(\n    religpew == 1 ~ \"Christian\",\n    religpew == 2 ~ \"Christian\",\n    religpew == 3 ~ \"Christian\",\n    religpew == 4 ~ \"Christian\",\n    religpew == 5 ~ \"Non-Christian or Something Else\",\n    religpew == 6 ~ \"Non-Christian or Something Else\",\n    religpew == 7 ~ \"Non-Christian or Something Else\",\n    religpew == 8 ~ \"Non-Christian or Something Else\",\n    religpew == 12 ~ \"Non-Christian or Something Else\",\n    religpew == 11 ~ \"No Religious Affiliation\",\n    TRUE ~ \"NA\"))\ndata_specific$Religious_Affiliation <- factor(data_specific$Religious_Affiliation, \n      levels = c(\"No Religious Affiliation\",\n                 \"Non-Christian or Something Else\",\n                 \"Christian\"))\n\n### Realization at this point there isn't a way to break a subgroup down by another \n### variable, so will make another religion variable and break down Christianity \n### specifically by race\n\n## Race/Ethnicity: Black, Hispanic, White, and Other Races\ndata_specific <- data_specific %>%\n  mutate(Racial_Group = case_when(\n    race == 1 ~ \"White\",\n    race == 2 ~ \"Black\",\n    race == 3 | hispanic == 1 ~ \"Hispanic\",\n    race == 4 ~ \"Other Race\",\n    race == 5 ~ \"Other Race\",\n    race == 6 ~ \"Other Race\",\n    race == 7 ~ \"Other Race\")) %>%\n  mutate(Christian_Racial_Group = case_when(\n    Religious_Affiliation == \"Christian\" & Racial_Group == \"Other Race\" ~ \"Other Race\",\n    Religious_Affiliation == \"Christian\" & Racial_Group == \"Hispanic\" ~ \"Hispanic\",\n    Religious_Affiliation == \"Christian\" & Racial_Group == \"Black\" ~ \"Black\",\n    Religious_Affiliation == \"Christian\" & Racial_Group == \"White\" ~ \"White\",\n    Religious_Affiliation == \"Non-Christian or Something Else\" ~ \"Non-Christian or Something Else\",\n    Religious_Affiliation == \"No Religious Affiliation\" ~ \"No Religious Affiliation\",\n    TRUE ~ \"NA\"))\n\n### Ensure order is as appears on original graph\ndata_specific$Christian_Racial_Group <- factor(data_specific$Christian_Racial_Group, \n      levels = c(\"No Religious Affiliation\",\n                 \"Non-Christian or Something Else\",\n                 \"Other Race\", \n                 \"Black\", \n                 \"Hispanic\", \n                 \"White\"))\n\n# Ended up not needing: data_specific <- data_specific %>% arrange(Christian_Racial_Group)\n# %>% group_by(Christian_Racial_Group) %>% mutate(label_y = cumsum())\n\n## Make a Baseline Dataframe\ndata_baseline <- data_specific %>%\n  filter(Religious_Affiliation != \"NA\") %>% \n  filter(Racial_Group != \"NA\") %>% \n  filter(Christian_Racial_Group != \"NA\")\n\n## Investigate Proportion of Each Group\n### Create a Table That Calculates Total of Each Party\nproportions_data_specific_total <- data_baseline %>%\n  arrange(CL_E2016PPEP, rev(Christian_Racial_Group)) %>% \n  group_by(CL_E2016PPEP) %>% \n  count() %>% \n  rename(total = n)\n\n### Calculate Proportions Based on Total of Each Party\nproportions_data_specific <- data_baseline %>%\n  arrange(CL_E2016PPEP, rev(Christian_Racial_Group)) %>% \n  group_by(CL_E2016PPEP, Christian_Racial_Group) %>% \n  count() %>% \n  left_join(proportions_data_specific_total, by = \"CL_E2016PPEP\") %>% \n  mutate(Percentage = n/total) %>% group_by(CL_E2016PPEP) %>% \n  mutate(label_y = 1 - (cumsum(Percentage) - 0.5 * Percentage))\n\n# Data Visualization\nggplot(data = proportions_data_specific, \n       aes(x = CL_E2016PPEP, y = Percentage, \n           group = Christian_Racial_Group, \n           fill = Christian_Racial_Group)) + \n  scale_x_discrete(position = \"top\") + \n  scale_fill_manual(values = \n    c(`No Religious Affiliation` = \"limegreen\",\n      `Non-Christian or Something Else` = \"purple\",\n      `Other Race` = \"gold\", \n      White = \"firebrick1\", \n      Hispanic = \"darkorange\", \n      Black = \"orange\")) + \n  geom_col() + \n  geom_text(aes(y = label_y, label = Christian_Racial_Group), colour = \"white\", size = 3) + \n  labs(title = \"Democratic voters are less religious and more diverse\", \n  subtitle = \"Breakdown of 2016 presidential election primary voters by religious affiliation and party (and, among Christians, race)\") +\n  theme_fivethirtyeight() + \n  theme(axis.text.y = element_blank(),\n        panel.background = element_rect(fill = \"gainsboro\"), \n        plot.background = element_rect(fill = \"gainsboro\"), \n        legend.position = \"none\", axis.ticks = element_blank())\n\n\n\nggsave(\"visualization_exercise_result.png\", path = \"output\", width = 3000, height = 2000, units = \"px\")"
  },
  {
    "objectID": "visualization_exercise.html#response-to-module-5-feedback",
    "href": "visualization_exercise.html#response-to-module-5-feedback",
    "title": "Visualization Exercise",
    "section": "Response to Module 5 Feedback",
    "text": "Response to Module 5 Feedback\nI have changed the labeling font size to 3. As occasionally the visualization changes width/height based on monitor display, I decided to save the result as a PNG file so that the scaling would be the same no matter the resolution of the monitor used to view it. Here is the file below:"
  },
  {
    "objectID": "tidytuesday_exercise.html#peek-at-data",
    "href": "tidytuesday_exercise.html#peek-at-data",
    "title": "Tidy Tuesday Exercise",
    "section": "Peek at Data",
    "text": "Peek at Data\n\nstr(data)\n\nspc_tbl_ [1,155 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ movie_name        : chr [1:1155] \"Harold and Maude\" \"Venus\" \"The Quiet American\" \"The Big Lebowski\" ...\n $ release_year      : num [1:1155] 1971 2006 2002 1998 2010 ...\n $ director          : chr [1:1155] \"Hal Ashby\" \"Roger Michell\" \"Phillip Noyce\" \"Joel Coen\" ...\n $ age_difference    : num [1:1155] 52 50 49 45 43 42 40 39 38 38 ...\n $ couple_number     : num [1:1155] 1 1 1 1 1 1 1 1 1 1 ...\n $ actor_1_name      : chr [1:1155] \"Ruth Gordon\" \"Peter O'Toole\" \"Michael Caine\" \"David Huddleston\" ...\n $ actor_2_name      : chr [1:1155] \"Bud Cort\" \"Jodie Whittaker\" \"Do Thi Hai Yen\" \"Tara Reid\" ...\n $ character_1_gender: chr [1:1155] \"woman\" \"man\" \"man\" \"man\" ...\n $ character_2_gender: chr [1:1155] \"man\" \"woman\" \"woman\" \"woman\" ...\n $ actor_1_birthdate : Date[1:1155], format: \"1896-10-30\" \"1932-08-02\" ...\n $ actor_2_birthdate : Date[1:1155], format: \"1948-03-29\" \"1982-06-03\" ...\n $ actor_1_age       : num [1:1155] 75 74 69 68 81 59 62 69 57 77 ...\n $ actor_2_age       : num [1:1155] 23 24 20 23 38 17 22 30 19 39 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   movie_name = col_character(),\n  ..   release_year = col_double(),\n  ..   director = col_character(),\n  ..   age_difference = col_double(),\n  ..   couple_number = col_double(),\n  ..   actor_1_name = col_character(),\n  ..   actor_2_name = col_character(),\n  ..   character_1_gender = col_character(),\n  ..   character_2_gender = col_character(),\n  ..   actor_1_birthdate = col_date(format = \"\"),\n  ..   actor_2_birthdate = col_date(format = \"\"),\n  ..   actor_1_age = col_double(),\n  ..   actor_2_age = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\ncolnames(data)\n\n [1] \"movie_name\"         \"release_year\"       \"director\"          \n [4] \"age_difference\"     \"couple_number\"      \"actor_1_name\"      \n [7] \"actor_2_name\"       \"character_1_gender\" \"character_2_gender\"\n[10] \"actor_1_birthdate\"  \"actor_2_birthdate\"  \"actor_1_age\"       \n[13] \"actor_2_age\""
  },
  {
    "objectID": "tidytuesday_exercise.html#notes",
    "href": "tidytuesday_exercise.html#notes",
    "title": "Tidy Tuesday Exercise",
    "section": "Notes",
    "text": "Notes\nOverall, it appears that the original data given by TidyTuesday is pretty clean already, so I will be modifying column order so that it feels easier to read across the variables. I will also be modifying gender for each character to read as “Male” or “Female” and marking each decade that the movie was released."
  },
  {
    "objectID": "tidytuesday_exercise.html#move-columns",
    "href": "tidytuesday_exercise.html#move-columns",
    "title": "Tidy Tuesday Exercise",
    "section": "Move Columns",
    "text": "Move Columns\n\n# Desired Order: Movie Name, Release Year, Director, \n## Actor 1 Name, Actor 1 Birthdate, Actor 1 Age, \n## Actor 2 Name, Actor 2 Birthdate, Actor 2 Age, \n## Age Difference, Couple Number\n\ndata <- data %>%\n  # Actor 1\n  relocate(actor_1_name, .after = director) %>%\n  relocate(actor_1_birthdate, .after = actor_1_name) %>%\n  relocate(actor_1_age, .after = actor_1_birthdate) %>%\n  # Actor 2\n  relocate(actor_2_name, .after = actor_1_age) %>%\n  relocate(actor_2_birthdate, .after = actor_2_name) %>%\n  relocate(actor_2_age, .after = actor_2_birthdate) %>%\n  # Age Difference + Couple Number\n  relocate(age_difference, .after = actor_2_age) %>%\n  relocate(couple_number, .after = age_difference)"
  },
  {
    "objectID": "tidytuesday_exercise.html#change-gender-to-male-and-female",
    "href": "tidytuesday_exercise.html#change-gender-to-male-and-female",
    "title": "Tidy Tuesday Exercise",
    "section": "Change Gender to “Male” and “Female”",
    "text": "Change Gender to “Male” and “Female”\n\ndata <- data %>%\n  mutate(character_1_gender = case_when(\n    character_1_gender == \"man\" ~ \"Male\",\n    character_1_gender == \"woman\" ~ \"Female\")) %>%\n  mutate(character_2_gender = case_when(\n    character_2_gender == \"man\" ~ \"Male\",\n    character_2_gender == \"woman\" ~ \"Female\"))"
  },
  {
    "objectID": "tidytuesday_exercise.html#new-variable-decade",
    "href": "tidytuesday_exercise.html#new-variable-decade",
    "title": "Tidy Tuesday Exercise",
    "section": "New Variable: Decade",
    "text": "New Variable: Decade\n\ndata <- data %>%\n  mutate(Decade = case_when(\n    release_year >= 1930 & release_year < 1940 ~ \"1930s\",\n    release_year >= 1940 & release_year < 1950 ~ \"1940s\",\n    release_year >= 1950 & release_year < 1960 ~ \"1950s\",\n    release_year >= 1960 & release_year < 1970 ~ \"1960s\",\n    release_year >= 1970 & release_year < 1980 ~ \"1970s\",\n    release_year >= 1980 & release_year < 1990 ~ \"1980s\",\n    release_year >= 1990 & release_year < 2000 ~ \"1990s\",\n    release_year >= 2000 & release_year < 2010 ~ \"2000s\",\n    release_year >= 2010 & release_year < 2020 ~ \"2010s\",\n    release_year >= 2020 & release_year < 2030 ~ \"2020s\")) %>%\n  mutate(Decade_Numeric = case_when(\n    Decade == \"1930s\" ~ 1930, \n    Decade == \"1940s\" ~ 1940,\n    Decade == \"1950s\" ~ 1950,\n    Decade == \"1960s\" ~ 1960,\n    Decade == \"1970s\" ~ 1970,\n    Decade == \"1980s\" ~ 1980,\n    Decade == \"1990s\" ~ 1990,\n    Decade == \"2000s\" ~ 2000,\n    Decade == \"2010s\" ~ 2010,\n    Decade == \"2020s\" ~ 2020))"
  },
  {
    "objectID": "tidytuesday_exercise.html#does-age-difference-decrease-by-year",
    "href": "tidytuesday_exercise.html#does-age-difference-decrease-by-year",
    "title": "Tidy Tuesday Exercise",
    "section": "Does Age Difference Decrease by Year?",
    "text": "Does Age Difference Decrease by Year?\n\nggplot(data, aes(x = release_year, y = age_difference)) +\n  geom_point() + \n  geom_line() + \n  geom_smooth(method = \"loess\", color = \"red\", fill = \"red\") +\n  geom_smooth(method = lm, color = \"blue\", fill = \"blue\") + \n  labs(x = \"Age Difference\", y = \"Release Year\", \n       title = \"Age Difference by Release Year\")\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nAccording to this graph, it does appear that age difference decreases as time passes. However, the lines become “messy” towards the end, so I will try to tackle this by grouping by decade.\n\nNew Variable: Average Age Difference by Decade\n\ndata_2 <- data %>%\n  group_by(Decade) %>%\n  summarise(Decade_Numeric, release_year, Decade,\n            Average_Age_Difference_by_Decade =\n              mean(age_difference)) %>%\n  count(release_year, Decade, \n        Average_Age_Difference_by_Decade, Decade_Numeric)\n\n`summarise()` has grouped output by 'Decade'. You can override using the\n`.groups` argument.\n\n\n\n\nGraph of Average Age Difference for Each Decade\n\nggplot(data = data_2, aes(x = Decade_Numeric, y = Average_Age_Difference_by_Decade)) + \n  geom_point() + \n  geom_line() + \n  geom_smooth() + \n  labs(x = \"Decade\", y = \"Average Age Difference\", \n       title = \"Average Age Difference by Decade\")\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nAgain, it seems that there is an overall decrease in age difference from the 1940s to about the year 2000, but we see age difference increasing once again from the 2000s onward."
  },
  {
    "objectID": "tidytuesday_exercise.html#are-men-typically-older-than-women-in-these-movies",
    "href": "tidytuesday_exercise.html#are-men-typically-older-than-women-in-these-movies",
    "title": "Tidy Tuesday Exercise",
    "section": "Are Men Typically Older than Women in These Movies?",
    "text": "Are Men Typically Older than Women in These Movies?\n\n# Character 1 Age\nggplot(data, aes(x = character_1_gender, y = actor_1_age)) +\n  geom_point() + \n  geom_line() + \n  geom_boxplot() + \n  labs(x = \"Gender\", y = \"Age\", \n       title = \"Boxplot of Age by Gender for Character 1\")\n\n\n\n# Character 2 Age\nggplot(data, aes(x = character_2_gender, y = actor_2_age)) +\n  geom_point() + \n  geom_line() + \n  geom_boxplot() + \n  labs(x = \"Gender\", y = \"Age\", \n       title = \"Boxplot of Age by Gender for Character 2\")\n\n\n\n\nYes, it does appear that men are usually slightly older than women in these films."
  },
  {
    "objectID": "tidytuesday_exercise.html#does-couple-number-impact-age-difference",
    "href": "tidytuesday_exercise.html#does-couple-number-impact-age-difference",
    "title": "Tidy Tuesday Exercise",
    "section": "Does Couple Number Impact Age Difference?",
    "text": "Does Couple Number Impact Age Difference?\n\nggplot(data, aes(x = couple_number, y = age_difference, group = couple_number)) + \n  geom_point() + \n  geom_line() + \n  geom_boxplot()\n\n\n\n\nAs we can see from the graph, the lower the couple number, the greater the age difference in general. It is interesting, though, that we see increasing age difference once again for couple numbers 6 and 7."
  },
  {
    "objectID": "tidytuesday_exercise.html#overall-look-at-data",
    "href": "tidytuesday_exercise.html#overall-look-at-data",
    "title": "Tidy Tuesday Exercise",
    "section": "Overall Look at Data",
    "text": "Overall Look at Data\n\ndata_summary <- do.call(cbind, lapply(data %>% select(\n  Decade_Numeric, release_year, \n  actor_1_age, actor_2_age, \n  age_difference, couple_number), summary))\n\ndata_summary <- data.frame(data_summary)\nrmarkdown::paged_table(data_summary)\n\n\n\n  \n\n\n\nUnfortunately, this feels like a poor view of the data…"
  },
  {
    "objectID": "fluanalysis/code/wrangling.html",
    "href": "fluanalysis/code/wrangling.html",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 1",
    "section": "",
    "text": "Tidyverse will be used for handling data processing/manipulation, and the here() package assists in pathing.\n\n\n\n\n# Pathing\ndata_path <- here(\"fluanalysis\", \"data\", \"SympAct_Any_Pos.Rda\")\n\n# Data Importation\nraw_data <- readRDS(data_path)"
  },
  {
    "objectID": "fluanalysis/code/exploration.html",
    "href": "fluanalysis/code/exploration.html",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 2",
    "section": "",
    "text": "Tidyverse will be used for graphing in addition to handling data processing/manipulation, and the here package assists in pathing.\n\n\n\n\n\n\n# Pathing\ndata_path <- here(\"fluanalysis\", \"data\", \"cleaned_data.rds\")\n\n# Data Importation\nclean_data <- readRDS(data_path)"
  },
  {
    "objectID": "fluanalysis/code/exploration.html#data-structure",
    "href": "fluanalysis/code/exploration.html#data-structure",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 2",
    "section": "Data Structure",
    "text": "Data Structure\n\nstr(clean_data)\n\n'data.frame':   730 obs. of  32 variables:\n $ SwollenLymphNodes: Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 1 1 1 2 1 ...\n  ..- attr(*, \"label\")= chr \"Swollen Lymph Nodes\"\n $ ChestCongestion  : Factor w/ 2 levels \"No\",\"Yes\": 1 2 2 2 1 1 1 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Chest Congestion\"\n $ ChillsSweats     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 2 2 2 2 2 1 ...\n  ..- attr(*, \"label\")= chr \"Chills/Sweats\"\n $ NasalCongestion  : Factor w/ 2 levels \"No\",\"Yes\": 1 2 2 2 1 1 1 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Nasal Congestion\"\n $ CoughYN          : Factor w/ 2 levels \"No\",\"Yes\": 2 2 1 2 1 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Cough\"\n $ Sneeze           : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 1 2 1 2 1 1 ...\n  ..- attr(*, \"label\")= chr \"Sneeze\"\n $ Fatigue          : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Fatigue\"\n $ SubjectiveFever  : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 2 2 2 2 1 ...\n  ..- attr(*, \"label\")= chr \"Subjective Fever\"\n $ Headache         : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 2 1 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Headache\"\n $ Weakness         : Factor w/ 4 levels \"None\",\"Mild\",..: 2 4 4 4 3 3 2 4 3 3 ...\n $ WeaknessYN       : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Weakness\"\n $ CoughIntensity   : Factor w/ 4 levels \"None\",\"Mild\",..: 4 4 2 3 1 3 4 3 3 3 ...\n  ..- attr(*, \"label\")= chr \"Cough Severity\"\n $ CoughYN2         : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 1 2 2 2 2 2 ...\n $ Myalgia          : Factor w/ 4 levels \"None\",\"Mild\",..: 2 4 4 4 2 3 2 4 3 2 ...\n $ MyalgiaYN        : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Myalgia\"\n $ RunnyNose        : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 1 1 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Runny Nose\"\n $ AbPain           : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Abdominal Pain\"\n $ ChestPain        : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 1 1 2 2 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Chest Pain\"\n $ Diarrhea         : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 2 1 1 1 1 ...\n $ EyePn            : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 2 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Eye Pain\"\n $ Insomnia         : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 2 1 1 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Sleeplessness\"\n $ ItchyEye         : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Itchy Eyes\"\n $ Nausea           : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 2 2 1 1 2 2 ...\n $ EarPn            : Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 2 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Ear Pain\"\n $ Hearing          : Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Loss of Hearing\"\n $ Pharyngitis      : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 2 2 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Sore Throat\"\n $ Breathless       : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 1 1 2 1 1 1 2 ...\n  ..- attr(*, \"label\")= chr \"Breathlessness\"\n $ ToothPn          : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 1 1 1 1 1 2 1 ...\n  ..- attr(*, \"label\")= chr \"Tooth Pain\"\n $ Vision           : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Blurred Vision\"\n $ Vomit            : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 2 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Vomiting\"\n $ Wheeze           : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 2 1 2 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Wheezing\"\n $ BodyTemp         : num  98.3 100.4 100.8 98.8 100.5 ...\n\n\nIt appears that there is only one numeric/continuous variable: BodyTemp. BodyTemp will also serve as the main continuous outcome of interest, and Nausea will serve as the main categorical outcome.\n\nCategorical Variables\nCategorical variables include: SwollenLymphNodes, ChestCongestion, ChillsSweats, NasalCongestion, CoughYN, Sneeze, Fatigue, Subjective Fever, Headache, Weakness, WeaknessYN, CoughIntensity, CoughYN2, Myalgia, MyalgiaYN, RunnyNose, AbPain, ChestPain, Diarrhea, EyePn, Insomnia, ItchyEye, Nausea, EarPn, Hearing, Pharyngitis, Breathless, ToothPn, Vision, Vomit, and Wheeze.\nSince these categorical variables are just Y/N, the number of yes/no’s will be presented in a table for each.\nMain Categorical Outcome - Nausea\n\n# Table\nrmarkdown::paged_table(clean_data %>% group_by(Nausea) %>% count())\n\n\n\n  \n\n\n\nOther Categorical Variables (Predictors)\n\n# Swollen Lymph Nodes\nrmarkdown::paged_table(clean_data %>% group_by(SwollenLymphNodes) %>% count())\n\n\n\n  \n\n\n# Chest Congestion and Chest Pain\n## Congestion\nrmarkdown::paged_table(clean_data %>% group_by(ChestCongestion) %>% count())\n\n\n\n  \n\n\n## Pain\nrmarkdown::paged_table(clean_data %>% group_by(ChestPain) %>% count())\n\n\n\n  \n\n\n# Chills/Sweats\nrmarkdown::paged_table(clean_data %>% group_by(ChillsSweats) %>% count())\n\n\n\n  \n\n\n# Nasal Congestion\nrmarkdown::paged_table(clean_data %>% group_by(NasalCongestion) %>% count())\n\n\n\n  \n\n\n# Coughing\n## Y/N\nrmarkdown::paged_table(clean_data %>% group_by(CoughYN) %>% count())\n\n\n\n  \n\n\n## Intensity\nrmarkdown::paged_table(clean_data %>% group_by(CoughIntensity) %>% count())\n\n\n\n  \n\n\n## 2nd Y/N\nrmarkdown::paged_table(clean_data %>% group_by(CoughYN2) %>% count())\n\n\n\n  \n\n\n# Sneezing\nrmarkdown::paged_table(clean_data %>% group_by(Sneeze) %>% count())\n\n\n\n  \n\n\n# Fatigue\nrmarkdown::paged_table(clean_data %>% group_by(Fatigue) %>% count())\n\n\n\n  \n\n\n# Subjective Fever\nrmarkdown::paged_table(clean_data %>% group_by(SubjectiveFever) %>% count())\n\n\n\n  \n\n\n# Headache\nrmarkdown::paged_table(clean_data %>% group_by(Headache) %>% count())\n\n\n\n  \n\n\n# Weakness\n## Severity\nrmarkdown::paged_table(clean_data %>% group_by(Weakness) %>% count())\n\n\n\n  \n\n\n## Y/N\nrmarkdown::paged_table(clean_data %>% group_by(WeaknessYN) %>% count())\n\n\n\n  \n\n\n# Myalgia\n## Y/N\nrmarkdown::paged_table(clean_data %>% group_by(MyalgiaYN) %>% count())\n\n\n\n  \n\n\n## Severity\nrmarkdown::paged_table(clean_data %>% group_by(Myalgia) %>% count())\n\n\n\n  \n\n\n# Runny Nose\nrmarkdown::paged_table(clean_data %>% group_by(RunnyNose) %>% count())\n\n\n\n  \n\n\n# Abdominal Pain\nrmarkdown::paged_table(clean_data %>% group_by(AbPain) %>% count())\n\n\n\n  \n\n\n# Diarrhea\nrmarkdown::paged_table(clean_data %>% group_by(Diarrhea) %>% count())\n\n\n\n  \n\n\n# Eye/Vision\n## Pain\nrmarkdown::paged_table(clean_data %>% group_by(EyePn) %>% count())\n\n\n\n  \n\n\n## Itchyness\nrmarkdown::paged_table(clean_data %>% group_by(ItchyEye) %>% count())\n\n\n\n  \n\n\n## Vision\nrmarkdown::paged_table(clean_data %>% group_by(Vision) %>% count())\n\n\n\n  \n\n\n# Insomnia\nrmarkdown::paged_table(clean_data %>% group_by(Insomnia) %>% count())\n\n\n\n  \n\n\n# Ear/Hearing\n## Pain\nrmarkdown::paged_table(clean_data %>% group_by(EarPn) %>% count())\n\n\n\n  \n\n\n## Hearing\nrmarkdown::paged_table(clean_data %>% group_by(Hearing) %>% count())\n\n\n\n  \n\n\n# Pharyngitis\nrmarkdown::paged_table(clean_data %>% group_by(Pharyngitis) %>% count())\n\n\n\n  \n\n\n# Breathless/Wheezing\n## Breathless\nrmarkdown::paged_table(clean_data %>% group_by(Breathless) %>% count())\n\n\n\n  \n\n\n## Wheezing\nrmarkdown::paged_table(clean_data %>% group_by(Wheeze) %>% count())\n\n\n\n  \n\n\n# Tooth Pain\nrmarkdown::paged_table(clean_data %>% group_by(ToothPn) %>% count())\n\n\n\n  \n\n\n# Vomiting\nrmarkdown::paged_table(clean_data %>% group_by(Vomit) %>% count())\n\n\n\n  \n\n\n\n\n\nContinuous Variables\nThe only continuous variable is body temperature, which also acts as the main continuous outcome of interest.\nBody Temperature - Main Continuous Outcome\n\n## Summary Table\nBody_Temp_Summary <- do.call(cbind, lapply(\n  clean_data %>% select(BodyTemp), summary))\nBody_Temp_Summary <- data.frame(Body_Temp_Summary)\nrmarkdown::paged_table(Body_Temp_Summary)\n\n\n\n  \n\n\n## Histogram\nggplot(clean_data, aes(x = BodyTemp)) + \n  geom_histogram(binwidth = 0.1) +\n  labs(x = \"Body Temperature\", y = \"Frequency\", \n       title = \"Frequency of Body Temperatures\")"
  },
  {
    "objectID": "fluanalysis/code/exploration.html#data-visualization-predictors-and-outcomes",
    "href": "fluanalysis/code/exploration.html#data-visualization-predictors-and-outcomes",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 2",
    "section": "Data Visualization: Predictors and Outcomes",
    "text": "Data Visualization: Predictors and Outcomes\nSelected Predictors of Interest for Outcome of Nausea: Headache, EarPn, Vomit\nSelected Predictors of Interest for Outcome of Body Temperature: SwollenLymphNodes, SubjectiveFever, MyalgiaYN, Myalgia, ChillsSweats\nSince it is difficult to represent categorical variables as themselves instead of numeric, I have decided to plot the Nausea variable as 0 for “No” and 1 for “Yes” on the y-axis.\n\nEar Pain vs Nausea\n\nggplot(clean_data %>% mutate(Nausea = if_else(Nausea == \"Yes\", 1, 0)), aes(x = EarPn, y = Nausea)) +\n  geom_point() +\n  geom_jitter() +\n  geom_violin() +\n  labs(x = \"Ear Pain\")\n\n\n\n\nMost do not have ear pain. This violin plot also depicts greater lack of nausea for those who don’t have ear pain. For those that do, the frequency distributions seem relatively similar, though the frequency of “Yes” to ear pain still results in slightly fewer cases of nausea.\n\n\nVomit vs Nausea\n\nggplot(clean_data %>% mutate(Nausea = if_else(Nausea == \"Yes\", 1, 0)), aes(x = Vomit, y = Nausea)) + \n  geom_point() + \n  geom_jitter() +\n  geom_violin() +\n  labs(x = \"Vomiting\")\n\n\n\n\nMost do not have vomiting. However, the violin plot above shows greater frequency of nausea with vomiting than vice-versa (which makes sense).\n\n\nHeadache vs Nausea\n\nggplot(clean_data %>% mutate(Nausea = if_else(Nausea == \"Yes\", 1, 0)), aes(x = Headache, y = Nausea)) + \n  geom_point() + \n  geom_jitter() +\n  geom_violin()\n\n\n\n\nMost have a headache. From the violin graph, it appears that headache may influence nausea, though a statistical test or model should be done to verify this.\n\n\nSubjective Fever vs Body Temperature\n\nggplot(clean_data, aes(x = SubjectiveFever, y = BodyTemp)) +\n  geom_point() + geom_boxplot() +\n  labs(x = \"Subjective Fever\", y = \"Body Temperature\")\n\n\n\n\nThose who say “Yes” to subjective fever tend to have higher body temperatures than those who say “No”.\n\n\nSwollen Lymph Nodes vs Body Temperature\n\nggplot(clean_data, aes(x = SwollenLymphNodes, y = BodyTemp)) +\n  geom_point() + geom_boxplot()\n\n\n\n\nThere appears to be little difference between the body temperatures of those who do have swollen lymph nodes and those who do not.\n\n\nMyalgia vs Body Temperature\n\n# Y/N\nggplot(clean_data, aes(x = MyalgiaYN, y = BodyTemp)) +\n  geom_point() + geom_boxplot()\n\n\n\n# Myalgia Severity\nggplot(clean_data, aes(x = Myalgia, y = BodyTemp)) +\n  geom_point() + geom_boxplot()\n\n\n\n\nIt seems that there is an association between having myalgia and a higher body temperature.\n\n\nChills/Sweats vs Body Temperature\n\nggplot(clean_data, aes(x = ChillsSweats, y = BodyTemp)) +\n  geom_point() + \n  geom_boxplot() +\n  labs(x = \"Chills/Sweats\")\n\n\n\n\nFrom the boxplot, it appears that those with chills/sweats tend to have higher body temperatures than those without."
  },
  {
    "objectID": "fluanalysis/code/fitting.html",
    "href": "fluanalysis/code/fitting.html",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 3",
    "section": "",
    "text": "# Data Handling and Model Building\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.3     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\nlibrary(gtsummary)\n\n\nAttaching package: 'gtsummary'\n\nThe following objects are masked from 'package:recipes':\n\n    all_double, all_factor, all_integer, all_logical, all_numeric\n\n# Pathing\nlibrary(here)\n\nhere() starts at C:/Users/Kai/Documents/School/Colleges/UGA/MPH Year/Spring 2023/Modern Data Analysis/kaichen-MADA-portfolio\n\npath <- here(\"fluanalysis\", \"data\", \"cleaned_data.rds\")\n\n# Load Data\nclean_data <- readRDS(path)\n\nAs mentioned in previous files, BodyTemp acts as the main continuous outcome of interest, and Nausea acts as the main categorical outcome of interest. For model fitting, all variables other than the outcome in question will be used as predictors. This means that in a logistic regression model for nausea, body temperature will be one of the predictors. Additionally, RunnyNose will be treated as the main predictor in the simple regression models."
  },
  {
    "objectID": "fluanalysis/code/fitting.html#set-up-linear-regression-engine",
    "href": "fluanalysis/code/fitting.html#set-up-linear-regression-engine",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 3",
    "section": "Set Up Linear Regression Engine",
    "text": "Set Up Linear Regression Engine\n\nlm_model <- linear_reg() %>% set_engine(\"lm\")"
  },
  {
    "objectID": "fluanalysis/code/fitting.html#runny-nose-vs-body-temperature",
    "href": "fluanalysis/code/fitting.html#runny-nose-vs-body-temperature",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 3",
    "section": "Runny Nose vs Body Temperature",
    "text": "Runny Nose vs Body Temperature\n\n# Tidyverse\ntidy(lm_model %>% fit(BodyTemp ~ RunnyNose, data = clean_data))\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic p.value\n  <chr>           <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)    99.1      0.0819   1210.   0      \n2 RunnyNoseYes   -0.293    0.0971     -3.01 0.00268\n\n# Base R\nsummary(lm(BodyTemp ~ RunnyNose, data = clean_data))\n\n\nCall:\nlm(formula = BodyTemp ~ RunnyNose, data = clean_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9431 -0.7505 -0.3505  0.3495  4.1495 \n\nCoefficients:\n             Estimate Std. Error  t value Pr(>|t|)    \n(Intercept)  99.14313    0.08191 1210.426  < 2e-16 ***\nRunnyNoseYes -0.29265    0.09714   -3.013  0.00268 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.19 on 728 degrees of freedom\nMultiple R-squared:  0.01231,   Adjusted R-squared:  0.01096 \nF-statistic: 9.076 on 1 and 728 DF,  p-value: 0.00268"
  },
  {
    "objectID": "fluanalysis/code/fitting.html#all-relevant-predictors-vs-body-temperature",
    "href": "fluanalysis/code/fitting.html#all-relevant-predictors-vs-body-temperature",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 3",
    "section": "All Relevant Predictors vs Body Temperature",
    "text": "All Relevant Predictors vs Body Temperature\n\n# Tidymodels\nrmarkdown::paged_table(tidy(lm_model %>% fit(BodyTemp ~ SwollenLymphNodes + ChestCongestion + ChillsSweats + NasalCongestion + CoughYN + Sneeze + Fatigue + SubjectiveFever + Headache + Weakness + WeaknessYN + CoughIntensity + CoughYN2 + Myalgia + MyalgiaYN + RunnyNose + AbPain + ChestPain + Diarrhea + EyePn + Insomnia + ItchyEye + Nausea + EarPn + Hearing + Pharyngitis + Breathless + ToothPn + Vision + Vomit + Wheeze, data = clean_data)))\n\n\n\n  \n\n\n# Base R\nsummary(lm(BodyTemp ~ SwollenLymphNodes + ChestCongestion + ChillsSweats + NasalCongestion + CoughYN + Sneeze + Fatigue + SubjectiveFever + Headache + Weakness + WeaknessYN + CoughIntensity + CoughYN2 + Myalgia + MyalgiaYN + RunnyNose + AbPain + ChestPain + Diarrhea + EyePn + Insomnia + ItchyEye + Nausea + EarPn + Hearing + Pharyngitis + Breathless + ToothPn + Vision + Vomit + Wheeze, data = clean_data))\n\n\nCall:\nlm(formula = BodyTemp ~ SwollenLymphNodes + ChestCongestion + \n    ChillsSweats + NasalCongestion + CoughYN + Sneeze + Fatigue + \n    SubjectiveFever + Headache + Weakness + WeaknessYN + CoughIntensity + \n    CoughYN2 + Myalgia + MyalgiaYN + RunnyNose + AbPain + ChestPain + \n    Diarrhea + EyePn + Insomnia + ItchyEye + Nausea + EarPn + \n    Hearing + Pharyngitis + Breathless + ToothPn + Vision + Vomit + \n    Wheeze, data = clean_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.2110 -0.7219 -0.2853  0.4342  4.2095 \n\nCoefficients: (3 not defined because of singularities)\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)            97.925243   0.303804 322.330  < 2e-16 ***\nSwollenLymphNodesYes   -0.165302   0.091959  -1.798 0.072682 .  \nChestCongestionYes      0.087326   0.097546   0.895 0.370973    \nChillsSweatsYes         0.201266   0.127302   1.581 0.114330    \nNasalCongestionYes     -0.215771   0.113798  -1.896 0.058362 .  \nCoughYNYes              0.313893   0.240738   1.304 0.192707    \nSneezeYes              -0.361924   0.098299  -3.682 0.000249 ***\nFatigueYes              0.264762   0.160558   1.649 0.099596 .  \nSubjectiveFeverYes      0.436837   0.103398   4.225 2.71e-05 ***\nHeadacheYes             0.011453   0.125405   0.091 0.927256    \nWeaknessMild            0.018229   0.189169   0.096 0.923258    \nWeaknessModerate        0.098944   0.197864   0.500 0.617189    \nWeaknessSevere          0.373435   0.230766   1.618 0.106065    \nWeaknessYNYes                 NA         NA      NA       NA    \nCoughIntensityMild      0.084881   0.279878   0.303 0.761768    \nCoughIntensityModerate -0.061384   0.301997  -0.203 0.838992    \nCoughIntensitySevere   -0.037272   0.314013  -0.119 0.905551    \nCoughYN2Yes                   NA         NA      NA       NA    \nMyalgiaMild             0.164242   0.160498   1.023 0.306510    \nMyalgiaModerate        -0.024064   0.167834  -0.143 0.886031    \nMyalgiaSevere          -0.129263   0.207854  -0.622 0.534216    \nMyalgiaYNYes                  NA         NA      NA       NA    \nRunnyNoseYes           -0.080485   0.108526  -0.742 0.458569    \nAbPainYes               0.031574   0.140236   0.225 0.821927    \nChestPainYes            0.105071   0.106980   0.982 0.326365    \nDiarrheaYes            -0.156806   0.129545  -1.210 0.226522    \nEyePnYes                0.131544   0.129757   1.014 0.311047    \nInsomniaYes            -0.006824   0.090797  -0.075 0.940114    \nItchyEyeYes            -0.008016   0.110191  -0.073 0.942028    \nNauseaYes              -0.034066   0.102049  -0.334 0.738620    \nEarPnYes                0.093790   0.113875   0.824 0.410436    \nHearingYes              0.232203   0.222043   1.046 0.296037    \nPharyngitisYes          0.317581   0.121342   2.617 0.009057 ** \nBreathlessYes           0.090526   0.099837   0.907 0.364863    \nToothPnYes             -0.022876   0.113750  -0.201 0.840673    \nVisionYes              -0.274625   0.277681  -0.989 0.323010    \nVomitYes                0.165272   0.151432   1.091 0.275478    \nWheezeYes              -0.046665   0.107036  -0.436 0.662990    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.144 on 695 degrees of freedom\nMultiple R-squared:  0.1287,    Adjusted R-squared:  0.08605 \nF-statistic: 3.019 on 34 and 695 DF,  p-value: 4.197e-08"
  },
  {
    "objectID": "fluanalysis/code/fitting.html#conclusions",
    "href": "fluanalysis/code/fitting.html#conclusions",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 3",
    "section": "Conclusions",
    "text": "Conclusions\nThe output of the models is ordinary in that they relay the same primary information of summary(lm(…)) in table form. However, I was unpleasantly surprised by the lack of stars next to p-values. For this reason, I prefer the longer-winded summary(lm(…)) to tidymodels. I will not deny, though, that there may be some instances where the ability to convert such information into a table would be greatly beneficial. The only difference between the two linear regression models built is that one accounts for the multiple predictors that have been inputted, rather than just one."
  },
  {
    "objectID": "fluanalysis/code/fitting.html#set-up-logistic-regression-engine",
    "href": "fluanalysis/code/fitting.html#set-up-logistic-regression-engine",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 3",
    "section": "Set Up Logistic Regression Engine",
    "text": "Set Up Logistic Regression Engine\n\nlogistic_model <- logistic_reg() %>% set_engine(\"glm\")"
  },
  {
    "objectID": "fluanalysis/code/fitting.html#runny-nose-vs-nausea",
    "href": "fluanalysis/code/fitting.html#runny-nose-vs-nausea",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 3",
    "section": "Runny Nose vs Nausea",
    "text": "Runny Nose vs Nausea\n\n# Tidymodels\ntidy(logistic_model %>% fit(Nausea ~ RunnyNose, data = clean_data))\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic    p.value\n  <chr>           <dbl>     <dbl>     <dbl>      <dbl>\n1 (Intercept)   -0.658      0.145    -4.53  0.00000589\n2 RunnyNoseYes   0.0502     0.172     0.292 0.770     \n\n# Base R\nsummary(glm(Nausea ~ RunnyNose, family = binomial, data = clean_data))\n\n\nCall:\nglm(formula = Nausea ~ RunnyNose, family = binomial, data = clean_data)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.9325  -0.9325  -0.9137   1.4439   1.4664  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -0.65781    0.14520  -4.530 5.89e-06 ***\nRunnyNoseYes  0.05018    0.17182   0.292     0.77    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 944.65  on 729  degrees of freedom\nResidual deviance: 944.57  on 728  degrees of freedom\nAIC: 948.57\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "fluanalysis/code/fitting.html#all-relevant-predictors-vs-nausea",
    "href": "fluanalysis/code/fitting.html#all-relevant-predictors-vs-nausea",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 3",
    "section": "All Relevant Predictors vs Nausea",
    "text": "All Relevant Predictors vs Nausea\n\n# Tidymodels\nrmarkdown::paged_table(tidy(logistic_model %>% fit(Nausea ~ SwollenLymphNodes + ChestCongestion + ChillsSweats + NasalCongestion + CoughYN + Sneeze + Fatigue + SubjectiveFever + Headache + Weakness + WeaknessYN + CoughIntensity + CoughYN2 + Myalgia + MyalgiaYN + RunnyNose + AbPain + ChestPain + Diarrhea + EyePn + Insomnia + ItchyEye + EarPn + Hearing + Pharyngitis + Breathless + ToothPn + Vision + Vomit + Wheeze + BodyTemp, data = clean_data)))\n\n\n\n  \n\n\n# Base R\nsummary(glm(Nausea ~ SwollenLymphNodes + ChestCongestion + ChillsSweats + NasalCongestion + CoughYN + Sneeze + Fatigue + SubjectiveFever + Headache + Weakness + WeaknessYN + CoughIntensity + CoughYN2 + Myalgia + MyalgiaYN + RunnyNose + AbPain + ChestPain + Diarrhea + EyePn + Insomnia + ItchyEye + EarPn + Hearing + Pharyngitis + Breathless + ToothPn + Vision + Vomit + Wheeze + BodyTemp, family = binomial, data = clean_data))\n\n\nCall:\nglm(formula = Nausea ~ SwollenLymphNodes + ChestCongestion + \n    ChillsSweats + NasalCongestion + CoughYN + Sneeze + Fatigue + \n    SubjectiveFever + Headache + Weakness + WeaknessYN + CoughIntensity + \n    CoughYN2 + Myalgia + MyalgiaYN + RunnyNose + AbPain + ChestPain + \n    Diarrhea + EyePn + Insomnia + ItchyEye + EarPn + Hearing + \n    Pharyngitis + Breathless + ToothPn + Vision + Vomit + Wheeze + \n    BodyTemp, family = binomial, data = clean_data)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.9065  -0.8138  -0.5301   0.8581   2.4268  \n\nCoefficients: (3 not defined because of singularities)\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)             0.222870   7.827409   0.028 0.977285    \nSwollenLymphNodesYes   -0.251083   0.196029  -1.281 0.200248    \nChestCongestionYes      0.275554   0.212662   1.296 0.195066    \nChillsSweatsYes         0.274097   0.287828   0.952 0.340948    \nNasalCongestionYes      0.425817   0.254561   1.673 0.094376 .  \nCoughYNYes             -0.140423   0.518798  -0.271 0.786644    \nSneezeYes               0.176724   0.210349   0.840 0.400828    \nFatigueYes              0.229062   0.371882   0.616 0.537925    \nSubjectiveFeverYes      0.277741   0.225363   1.232 0.217793    \nHeadacheYes             0.331259   0.284896   1.163 0.244937    \nWeaknessMild           -0.121606   0.446886  -0.272 0.785531    \nWeaknessModerate        0.310849   0.454483   0.684 0.493999    \nWeaknessSevere          0.823187   0.510424   1.613 0.106799    \nWeaknessYNYes                 NA         NA      NA       NA    \nCoughIntensityMild     -0.220794   0.584367  -0.378 0.705554    \nCoughIntensityModerate -0.362678   0.631370  -0.574 0.565676    \nCoughIntensitySevere   -0.950544   0.658142  -1.444 0.148659    \nCoughYN2Yes                   NA         NA      NA       NA    \nMyalgiaMild            -0.004146   0.368094  -0.011 0.991013    \nMyalgiaModerate         0.204743   0.373231   0.549 0.583301    \nMyalgiaSevere           0.120758   0.444927   0.271 0.786075    \nMyalgiaYNYes                  NA         NA      NA       NA    \nRunnyNoseYes            0.045324   0.232645   0.195 0.845535    \nAbPainYes               0.939304   0.281463   3.337 0.000846 ***\nChestPainYes            0.070777   0.227858   0.311 0.756090    \nDiarrheaYes             1.063934   0.258705   4.113 3.91e-05 ***\nEyePnYes               -0.341991   0.277720  -1.231 0.218164    \nInsomniaYes             0.084175   0.192985   0.436 0.662710    \nItchyEyeYes            -0.063364   0.232501  -0.273 0.785212    \nEarPnYes               -0.181719   0.239207  -0.760 0.447451    \nHearingYes              0.323052   0.452402   0.714 0.475177    \nPharyngitisYes          0.275364   0.266059   1.035 0.300680    \nBreathlessYes           0.526801   0.208579   2.526 0.011548 *  \nToothPnYes              0.480649   0.229474   2.095 0.036209 *  \nVisionYes               0.125498   0.541114   0.232 0.816596    \nVomitYes                2.458466   0.348608   7.052 1.76e-12 ***\nWheezeYes              -0.304435   0.234084  -1.301 0.193417    \nBodyTemp               -0.031246   0.079838  -0.391 0.695526    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 944.65  on 729  degrees of freedom\nResidual deviance: 751.47  on 695  degrees of freedom\nAIC: 821.47\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "fluanalysis/code/fitting.html#conclusions-1",
    "href": "fluanalysis/code/fitting.html#conclusions-1",
    "title": "Module 8 Exercise - Fitting Basic Statistical Models: Part 3",
    "section": "Conclusions",
    "text": "Conclusions\nI reiterate my thoughts from the previous Conclusions section under linear regression; I would still prefer manually recoding my variables for a summary(glm(…)) than use tidymodels, even if model performance between the options offered is the same. However, I have also noticed that summary() is not needed for the statistics to be displayed. Instead, that function is already built into fit(). Just like the linear regression models, the only difference between the two logistic models built is that one accounts for the multiple predictors that have been inputted, rather than just one.\nAll in all, while tidymodels would not be my go-to for model fitting, the package has a few functions I would like to keep in mind going forward."
  },
  {
    "objectID": "fluanalysis/readme.html",
    "href": "fluanalysis/readme.html",
    "title": "Data Analysis Portfolio: Kai Chen",
    "section": "",
    "text": "Scripts used for (pre)processing/cleaning and analysis will be found in the “code” folder, and both raw and cleaned data is found in the “data” file.\n\n\n\n\nIn the cleaning process, several columns and observations containing NA values are removed. After cleaning, the list of columns include: SwollenLymphNodes, ChestCongestion, ChillsSweats, NasalCongestion, CoughYN, Sneeze, Fatigue, Subjective Fever, Headache, Weakness, WeaknessYN, CoughIntensity, CoughYN2, Myalgia, MyalgiaYN, RunnyNose, AbPain, ChestPain, Diarrhea, EyePn, Insomnia, ItchyEye, Nausea, EarPn, Hearing, Pharyngitis, Breathless, ToothPn, Vision, Vomit, Wheeze, and BodyTemp. For more information, please view the Quarto/R document.\n\n\n\nVariables of interest explored through tables, violin graphs, and boxplots include (among others) Nausea (main categorical outcome), SwollenLymphNodes, ChillsSweats, SubjectiveFever, Headache, MyalgiaYN, Myalgia, EarPn, Vomit, and BodyTemp (Main Continuous Outcome). For more information, please view the Quarto/R document.\nPredictors of interest for Nausea in exploratory analysis are:\n\nHeadache\nEarPn\nVomit\n\nPredictors of interest for BodyTemp in exploratory analysis are:\n\nSwollenLymphNodes\nSubjectiveFever\nMyalgiaYN\nMyalgia\nChillsSweats\n\n\n\n\nModel fitting was accomplished through the tidymodels package and re-evaluated using base R’s glm() and lm() functions. BodyTemp acts as the main continuous outcome of interest, and Nausea acts as the main categorical outcome of interest. All other columns from the cleaned dataset will be treated as predictors. For more information, please view the Quarto/R document.\n\n\n\n\n\n\nThe raw data was obtained from https://datadryad.org/stash/dataset/doi:10.5061/dryad.51c59zw4v and saved as “SympAct_Any_Pos.Rda”.\n\n\n\nThe cleaned data is named as “cleaned_data.rds”."
  },
  {
    "objectID": "fluanalysis/code/modeleval.html",
    "href": "fluanalysis/code/modeleval.html",
    "title": "Module 10 Exercise: Flu Analysis Modeling Workflow",
    "section": "",
    "text": "# Pathing\nlibrary(here)\n\nhere() starts at C:/Users/Kai/Documents/School/Colleges/UGA/MPH Year/Spring 2023/Modern Data Analysis/kaichen-MADA-portfolio\n\n# Data Handling\nlibrary(tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n# Model Handling and Evaluation\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.3     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n\n\n\n\n\n\n# Set Variable for Where Original Data is Located\ndata_location <- here(\"fluanalysis\", \"data\", \"cleaned_data.rds\")\n\n# Read in Original Data\noriginal_data <- readRDS(data_location)\n\n\n\n\n\n# Set Seed for Reproducible Analysis\nset.seed(2023)\n\n# Split Original Data into Training and Testing Data\ndata_split <- initial_split(original_data, prop = 3/4)\n\n# Create Data Frames from Split Data\ntrain_data <- training(data_split)\ntest_data <- testing(data_split)\n\n\n\n\n\n\n\nflu_recipe <- recipe(Nausea ~ ., data = train_data)\n\n\n\n\n\n# Set Model to Logistic Regression\nlogistic_regression_model <- logistic_reg() %>% set_engine(\"glm\")\n\n# Specifying Workflow\nlogistic_workflow <- workflow() %>% \n  add_model(logistic_regression_model) %>%\n  add_recipe(flu_recipe)\n\n# Fitting/Training\nlogistic_fit <- logistic_workflow %>%\n  fit(data = train_data)\n\n\n\n\n\n\n\n\n# Training Data\npredict(logistic_fit, train_data)\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\n\n# A tibble: 547 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 Yes        \n10 No         \n# … with 537 more rows\n\ntrain_augment <- augment(logistic_fit, train_data)\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\n## Generate ROC Curve\ntrain_augment %>% \n  roc_curve(truth = Nausea, .pred_No) %>%\n  autoplot()\n\n\n\n## Calculate ROC-AUC\ntrain_augment %>%\n  roc_auc(truth = Nausea, .pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.796\n\n# Test Data\npredict(logistic_fit, test_data)\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\n\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 Yes        \n 2 No         \n 3 No         \n 4 Yes        \n 5 No         \n 6 Yes        \n 7 No         \n 8 Yes        \n 9 No         \n10 No         \n# … with 173 more rows\n\ntest_augment <- augment(logistic_fit, test_data)\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\n## Generate ROC Curve\ntest_augment %>%\n  roc_curve(truth = Nausea, .pred_No) %>%\n  autoplot()\n\n\n\n## Calculate ROC-AUC\ntest_augment %>%\n  roc_auc(truth = Nausea, .pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.672\n\n\nThe fitted model appears to perform worse on the test data (ROC-AUC = 0.672) than on the training data (ROC-AUC = 0.796).\n\n\n\n\n\n\n\nnew_flu_recipe <- recipe(Nausea ~ RunnyNose, data = train_data)\n\n\n\n\n\n# Specifying Workflow\nnew_logistic_workflow <- workflow() %>% \n  add_model(logistic_regression_model) %>%\n  add_recipe(new_flu_recipe)\n\n# Fitting/Training\nnew_logistic_fit <- new_logistic_workflow %>%\n  fit(data = train_data)\n\n\n\n\n\n# Training Data\npredict(new_logistic_fit, train_data)\n\n# A tibble: 547 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 537 more rows\n\nnew_train_augment <- augment(new_logistic_fit, train_data)\n## Generate ROC Curve\nnew_train_augment %>% \n  roc_curve(truth = Nausea, .pred_No) %>%\n  autoplot()\n\n\n\n## Calculate ROC-AUC\nnew_train_augment %>%\n  roc_auc(truth = Nausea, .pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.515\n\n# Test Data\npredict(new_logistic_fit, test_data)\n\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 173 more rows\n\nnew_test_augment <- augment(new_logistic_fit, test_data)\n## Generate ROC Curve\nnew_test_augment %>%\n  roc_curve(truth = Nausea, .pred_No) %>%\n  autoplot()\n\n\n\n## Calculate ROC-AUC\nnew_test_augment %>%\n  roc_auc(truth = Nausea, .pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.476\n\n\nThe alternative model that uses just one predictor appears to be much worse (Training ROC-AUC: 0.515, Test ROC-AUC: 0.476) than the model that uses all predictors (Training ROC-AUC: 0.796, Test ROC-AUC: 0.672)."
  },
  {
    "objectID": "fluanalysis/code/modeleval.html#part-ii-continous-outcome",
    "href": "fluanalysis/code/modeleval.html#part-ii-continous-outcome",
    "title": "Module 10 Exercise: Flu Analysis Modeling Workflow",
    "section": "Part II: Continous Outcome",
    "text": "Part II: Continous Outcome\n\n# Part II: Continous Outcome\n## Libraries already loaded above (Thanks Kailin :))\n\n## Set seed for reproducibility\nset.seed(2)\n\n\n\n## Split 3/4 of the data into the training set\nflu_splitc1 <- initial_split(original_data, prop = 3/4)\n\n\n\n## Create data frame for the two sets:\ntrain_datac1 <- training(flu_splitc1)\ntest_datac1 <- testing(flu_splitc1)\n\n\n## Full model\n\n### Creating my recipe\nflu_recipec1 <- recipe(BodyTemp ~ ., data = original_data)\n\n\n\n### Prepare model\nlin_modc1 <- linear_reg() %>%\n  set_engine(\"lm\")\n\n\n\n### Create workflow\nflu_wflowc1 <- workflow() %>%\n  add_model(lin_modc1) %>%\n  add_recipe(flu_recipec1)\n\n\n\n### Prepare the recipe and train the model\nflu_fitc1 <- flu_wflowc1 %>%\n  fit(data = train_datac1)\n\n\n\n### Tidy output\nflu_fitc1 %>%\n  extract_fit_parsnip() %>%\n  tidy()\n\n# A tibble: 38 × 5\n   term                 estimate std.error statistic  p.value\n   <chr>                   <dbl>     <dbl>     <dbl>    <dbl>\n 1 (Intercept)           98.2        0.351   280.    0       \n 2 SwollenLymphNodesYes  -0.100      0.109    -0.923 0.356   \n 3 ChestCongestionYes     0.0519     0.117     0.441 0.659   \n 4 ChillsSweatsYes        0.163      0.151     1.08  0.282   \n 5 NasalCongestionYes    -0.239      0.132    -1.82  0.0698  \n 6 CoughYNYes             0.141      0.271     0.522 0.602   \n 7 SneezeYes             -0.310      0.116    -2.67  0.00784 \n 8 FatigueYes             0.197      0.185     1.06  0.288   \n 9 SubjectiveFeverYes     0.476      0.124     3.83  0.000147\n10 HeadacheYes            0.0282     0.151     0.187 0.852   \n# … with 28 more rows\n\n### Prediction\npredict(flu_fitc1, test_datac1)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\n\n# A tibble: 183 × 1\n   .pred\n   <dbl>\n 1  99.6\n 2  99.8\n 3  99.8\n 4  98.4\n 5  98.7\n 6  98.6\n 7  98.9\n 8  99.0\n 9  99.7\n10  99.3\n# … with 173 more rows\n\n### Augment\nflu_augc1 <- augment(flu_fitc1, test_datac1)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\n### Looks like\nflu_augc1 %>%\n  select(BodyTemp, .pred)\n\n# A tibble: 183 × 2\n   BodyTemp .pred\n      <dbl> <dbl>\n 1    100.   99.6\n 2     98.2  99.8\n 3     97.9  99.8\n 4     98.1  98.4\n 5     99.2  98.7\n 6     98.1  98.6\n 7     98.5  98.9\n 8    100.   99.0\n 9     98.9  99.7\n10     98.8  99.3\n# … with 173 more rows\n\n### flu_aug\nflu_augc1 %>%\n  rmse(BodyTemp , .pred)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard        1.15\n\n### One Predictor\n## Creating my recipe2\nflu_recipec2 <- recipe(BodyTemp ~ RunnyNose, data = original_data)\n\n\n\n#### Previous model will work\n\n\n\n### Create workflow2\nflu_wflowc2 <- workflow() %>%\n  add_model(lin_modc1) %>%\n  add_recipe(flu_recipec2)\n\n\n\n### Prepare the recipe and train the model2\nflu_fitc2 <- flu_wflowc2 %>%\n  fit(data = train_datac1)\n\n\n\n### Tidy output2\nflu_fitc2 %>%\n  extract_fit_parsnip() %>%\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic p.value\n  <chr>           <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)    99.2      0.0968   1024.   0      \n2 RunnyNoseYes   -0.366    0.114      -3.21 0.00139\n\n### Prediction2\npredict(flu_fitc2, test_datac1)\n\n# A tibble: 183 × 1\n   .pred\n   <dbl>\n 1  99.2\n 2  99.2\n 3  99.2\n 4  98.8\n 5  98.8\n 6  98.8\n 7  98.8\n 8  98.8\n 9  99.2\n10  99.2\n# … with 173 more rows\n\n### Augment2\nflu_augc2 <- augment(flu_fitc2, test_datac1)\n\n\n\n### Looks like2\nflu_augc2 %>%\n  select(BodyTemp, .pred)\n\n# A tibble: 183 × 2\n   BodyTemp .pred\n      <dbl> <dbl>\n 1    100.   99.2\n 2     98.2  99.2\n 3     97.9  99.2\n 4     98.1  98.8\n 5     99.2  98.8\n 6     98.1  98.8\n 7     98.5  98.8\n 8    100.   98.8\n 9     98.9  99.2\n10     98.8  99.2\n# … with 173 more rows\n\n### flu_aug2\nflu_augc2 %>%\n  rmse(BodyTemp , .pred)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard        1.18"
  }
]